android {
//////////////////////////////////////////////// 签名打包 star ////////////////////////////////////////////////////////////////
    //签名 签名的那些事：https://www.jianshu.com/p/a1f8e5896aa2
    signingConfigs {
        config {
            storeFile file('../gradle/2036.jks')
            storePassword '20362036'
            keyAlias '2036'
            keyPassword '20362036'
            v1SigningEnabled true //是否开启V1签名
            v2SigningEnabled true //是否开启V2签名
        }
    }
    buildTypes {
        debug {
            // 调试模式开关
            debuggable true
            jniDebuggable true
            // 压缩对齐开关
            zipAlignEnabled false
            // 移除无用的资源
            shrinkResources false
            // 代码混淆开关
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            // 签名信息配置
            signingConfig signingConfigs.config
            ndk {
//                abiFilters('armeabi', 'armeabi-v7a', 'x86', 'mips', 'arm64-v8a', "mips64", "x86_64")
                abiFilters('armeabi-v7a', 'arm64-v8a')
            }
        }
        release {
            // 调试模式开关
            debuggable false
            jniDebuggable false
            // 压缩对齐开关
            zipAlignEnabled true
            // 移除无用的资源
            shrinkResources true
            // 代码混淆开关
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            // 签名信息配置
            signingConfig signingConfigs.config
            // 仅保留两种架构的 so 库，根据 Bugly 统计得出
            ndk {
                // armeabi：万金油架构平台（占用率：0%）
                // armeabi-v7a：曾经主流的架构平台（占用率：10%）
                // arm64-v8a：目前主流架构平台（占用率：95%）
                abiFilters('armeabi-v7a', 'arm64-v8a')
            }
        }
    }
    // 打包时间
    def buildTime = new Date().format('yyyyMMddHHmm')
    applicationVariants.all { variant ->
        // apk 输出文件名配置
        variant.outputs.all { output ->
            def outputFile = output.outputFile
            if (outputFile != null && outputFile.name.endsWith('.apk')) {
                def fileName = outputFile.name
                boolean isRelease = !fileName.contains("debug")
                fileName = "app_" + signingConfigs.config.keyAlias + "_" + buildTime + "_" + (!isRelease ? "_debug" : "_release") + ".apk"
                outputFileName = fileName
            }
        }
    }
//////////////////////////////////////////////// 签名打包 end ////////////////////////////////////////////////////////////////
}