//implementation 'com.example.myapp.lib:lib_aar:1.0.0@aar'
def groupIdPb = "com.example.myapp.lib"
//lib_aar
def artifactIdPb = project.getName()
//1.0.0
def versionNamePb = rootProject.ext.sdkVersion.libVersionName
//自己用nexus搭建的服务器，不好用：https://www.jianshu.com/p/9dca46563492
def urlPb = "http://localhost:8081/repository/maven-releases/"
//jelly
def usernamePb = "jelly"
def passwordPb = "jelly"
def pbRepo = "jelly"
def pbUserId = "jelly"
def pbEmail = "jelly_brother@163.com"
def pbUserOrg = "china"
def pbBintayKey = ""
def pbDesc = "demo"
def pbLicense = 'The Apache Software License, Version 2.0'
def pbLicenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
def pbSiteUrl = "https://github.com"
def pbGitUrl = "https://github.com/JellyBrother/App"
def pbIssueUrl = "https://github.com/JellyBrother/App/issues"

/**
 * maven发布：https://blog.csdn.net/Misdirection_XG/article/details/125193292
 * 方式1：新的脚本，需要插件：classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.0'
 */
apply plugin: 'maven-publish'
afterEvaluate {
    publishing {
        publications {
            // Creates a Maven publication called "myPublication".
            myPublication(MavenPublication) {
                groupId groupIdPb
                artifactId artifactIdPb
                version versionNamePb            // Your package version
                artifact "build/outputs/aar/${artifactIdPb}-release.aar"//aar包的目录

                //带上依赖 ，否则会报错
                pom.withXml {
                    def dependenciesNode = asNode().appendNode('dependencies')

                    def scopes = []
                    if (configurations.hasProperty("compile")) {
                        scopes.add(configurations.compile)
                    }
                    if (configurations.hasProperty("api")) {
                        scopes.add(configurations.api)
                    }
                    if (configurations.hasProperty("implementation")) {
                        scopes.add(configurations.implementation)
                    }
                    if (configurations.hasProperty("debugImplementation")) {
                        scopes.add(configurations.debugImplementation)
                    }
                    if (configurations.hasProperty("releaseImplementation")) {
                        scopes.add(configurations.releaseImplementation)
                    }
//                    if (project.ext.targetType != "jar") {
//                        scopes.add(configurations.provided)
//                    }
                    scopes.each { scope ->
                        scope.allDependencies.each {
                            if (it instanceof ModuleDependency) {
                                boolean isTransitive = ((ModuleDependency) it).transitive
                                if (!isTransitive) {
                                    println "<<<< not transitive dependency: [${it.group}, ${it.name}, ${it.version}]"
                                    return
                                }
                            }
                            if (it.group == "${project.rootProject.name}.libs" || it.version == 'unspecified') {
                                return
                            }
                            if (it.group && it.name && it.version) {
                                def dependencyNode = dependenciesNode.appendNode('dependency')
                                dependencyNode.appendNode('groupId', it.group)
                                dependencyNode.appendNode('artifactId', it.name)
                                dependencyNode.appendNode('version', it.version)
                                dependencyNode.appendNode('scope', scope.name)
                            }
                        }
                    }
                }
            }
        }

        // Repositories *to* which Gradle can publish artifacts
        repositories {
            maven {
                //上传到项目本地仓库
                url uri(urlPb)
                credentials {
                    username "admin"
                    password "admin123"
                }
            }
        }
    }
}

// 方式2，老的maven方式：需要插件： classpath 'com.github.dcendents:android-maven-plugin:1.2'
//apply plugin: 'maven'
//uploadArchives {
//    // 方式一
//    repositories {
//        mavenDeployer {
//            repository(url: uri(urlPb))
//            pom.groupId = groupIdPb
//            pom.artifactId = artifactIdPb
//            pom.version = versionNamePb
//        }
//    }
//}